{"version":3,"file":"static/js/115.0ec53547.chunk.js","mappings":"+SAQAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,WAAOC,EAAWC,EAAWC,EAAYC,GAAzC,uFACFN,EAAAA,EAAAA,IAAA,WACjBG,EADiB,YACJC,EADI,YACSC,EADT,oBAC+BJ,IAF7B,cACnBM,EADmB,yBAKlBA,EAASC,MALS,2CAAH,4DAQXC,EAAY,mCAAG,WAAMC,GAAN,uFACHV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADpC,cACpBM,EADoB,yBAGnBA,EAASC,MAHU,2CAAH,sDAMZG,EAAmB,mCAAG,WAAMD,GAAN,uFACVV,EAAAA,EAAAA,IAAA,iBACXU,EADW,4BACgBT,EADhB,oBADU,cAC3BM,EAD2B,yBAK1BA,EAASC,MALiB,2CAAH,sDAQnBI,EAAmB,mCAAG,WAAMF,GAAN,uFACVV,EAAAA,EAAAA,IAAA,iBACXU,EADW,4BACgBT,EADhB,2BADU,cAC3BM,EAD2B,yBAK1BA,GAL0B,2CAAH,sDASnBM,EAAQ,mCAAG,WAAMP,GAAN,uFACCN,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBK,IAFtB,cAChBC,EADgB,yBAKfA,GALe,2CAAH,qD,iHC6BrB,UAnEA,WAAmB,IAAD,EAChB,GAAkCO,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAb,UAAiB,SAAjB,EAA4B,IAQxCC,EAAS,mCAAG,2FAChBZ,GAAa,GADG,mBAGSH,EAAAA,EAAAA,IAASa,GAHlB,OAGRnB,EAHQ,OAIda,EAAUb,EAASC,KAAKqB,SAJV,yEAOdb,GAAa,GAPC,4EAAH,qDAgBTc,EAAoB,SAAAxB,GAExBmB,EAD6B,KAAVnB,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,EASD,OAPAyB,EAAAA,EAAAA,YAAU,WACU,OAAdL,GACFE,GAGH,GAAE,KAGD,iCACE,kBAAMI,SAnBW,SAAAC,GACnBA,EAAMC,iBACNN,GACD,EAgBG,WACE,kBAAOO,KAAK,OAAOC,MAAOnB,EAAYoB,SArClB,SAAAJ,GACxB,IAAM3B,EAAQ2B,EAAMK,OAAOF,MAC3BlB,EAAcZ,GACdwB,EAAkBxB,EACnB,KAkCK,mBAAQ6B,KAAK,SAAb,uBAEDpB,GACC,yCAEA,wBACGI,EAAOoB,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMvB,GAAhD,SACGmB,EAAMK,SAFFL,EAAME,GAMlB,QAKV,C","sources":["Services/Api.js","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\n// /trending/get-trending\n// /search/search-movies\n// /movies/get-movie-details\n// /movies/get-movie-credits\n// /movies/get-movie-reviews\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9419a46407ab6d0a86a089cd8749b3b7';\n\nexport const fetchMovies = async (queryType, mediaType, timeWindow, query) => {\n  const response = await axios.get(\n    `/${queryType}/${mediaType}/${timeWindow}?api_key=${API_KEY}`\n  );\n  // console.log('Api fetchMovies', response);\n  return response.data;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  // console.log('Api MovieById', response);\n  return response.data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log('Api credits:', response);\n  return response.data;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  // console.log('Api reviews:', response);\n  return response;\n};\n\n// /search/search-movies\nexport const getMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  // console.log('getMovie', response);\n  return response;\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, Link, useSearchParams } from 'react-router-dom';\nimport { getMovie } from 'Services/Api';\n\nfunction Movies() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query' ?? '');\n\n  const handleInputChange = event => {\n    const query = event.target.value;\n    setInputValue(query);\n    updateQueryString(query);\n  };\n\n  const loadMovie = async () => {\n    setIsLoading(true);\n    try {\n      const response = await getMovie(movieName);\n      setMovies(response.data.results);\n    } catch (error) {\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    loadMovie();\n  };\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (movieName !== null) {\n      loadMovie();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Movies;\n"],"names":["axios","API_KEY","fetchMovies","queryType","mediaType","timeWindow","query","response","data","getMovieById","movieId","getMovieCreditsById","getMovieReviewsById","getMovie","useState","isLoading","setIsLoading","inputValue","setInputValue","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","movieName","get","loadMovie","results","updateQueryString","useEffect","onSubmit","event","preventDefault","type","value","onChange","target","map","movie","to","id","state","from","title"],"sourceRoot":""}