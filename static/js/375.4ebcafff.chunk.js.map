{"version":3,"file":"static/js/375.4ebcafff.chunk.js","mappings":"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","sources":["Services/Api.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n// /trending/get-trending\n// /search/search-movies\n// /movies/get-movie-details\n// /movies/get-movie-credits\n// /movies/get-movie-reviews\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9419a46407ab6d0a86a089cd8749b3b7';\n\nexport const fetchMovies = async (queryType, mediaType, timeWindow, query) => {\n  const response = await axios.get(\n    `/${queryType}/${mediaType}/${timeWindow}?api_key=${API_KEY}`\n  );\n  // console.log('Api fetchMovies', response);\n  return response.data;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  // console.log('Api MovieById', response);\n  return response.data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log('Api credits:', response);\n  return response.data;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  // console.log('Api reviews:', response);\n  return response;\n};\n\n// /search/search-movies\nexport const getMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  // console.log('getMovie', response);\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieCard = styled.div`\n  display: flex;\n  gap: 15px;\n  padding: 15px 0;\n`;\n\nexport const StyledMovieDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const StyledMovieThumb = styled.img`\n  display: block;\n  max-height: 350px;\n`;\n\nexport const StyledGenresList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  list-style: none;\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  list-style: none;\n`;\n\nexport const StyledInfo = styled.div`\n  padding: 15px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieById } from 'Services/Api';\nimport {\n  StyledMovieThumb,\n  StyledMovieCard,\n  StyledMovieDetails,\n  StyledGenresList,\n  StyledList,\n  StyledInfo,\n} from './MovieDetails.styled';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  console.log('Location:', location);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieReleaseDate, setMovieReleaseDate] = useState('');\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movieOverview, setMovieOverview] = useState('');\n  const [movieGenres, setMovieGenres] = useState([]);\n  const [moviePoster, setMoviePoster] = useState('');\n  const [MovieUserScore, setMovieUserScore] = useState('');\n\n  // const backLinkHref = location.state?.from ?? '/movies';\n  // console.log('backLinkHref', backLinkHref);\n\n  const [backLinkHref, setBackLinkHref] = useState('');\n\n  useEffect(() => {\n    console.log('setBackLinkHref');\n    setBackLinkHref(location.state?.from ?? '/');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  // const releaseDate = movieDetails.release_date;\n  // // const releaseDateYear = releaseDate.substring(0, 4);\n\n  const loadMovieDetails = async () => {\n    setIsLoading(true);\n    try {\n      const response = await getMovieById(movieId);\n      // console.log('movie details response:', response.data)\n      setMovieReleaseDate(response.release_date);\n      setMovieTitle(response.title);\n      setMovieOverview(response.overview);\n      setMovieGenres(response.genres);\n      setMoviePoster(\n        `https://image.tmdb.org/t/p/w500/${response.poster_path}` ===\n          'https://image.tmdb.org/t/p/w500/null'\n          ? 'https://via.placeholder.com/150'\n          : `https://image.tmdb.org/t/p/w500/${response.poster_path}`\n      );\n      setMovieUserScore(response.vote_average);\n    } catch (error) {\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadMovieDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        <Link to={backLinkHref}>Go Back</Link>\n      </div>\n\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          <StyledMovieCard>\n            <StyledMovieThumb src={moviePoster} alt=\"movieTitle\" />\n            <StyledMovieDetails>\n              <h2>\n                {movieTitle} ({movieReleaseDate})\n              </h2>\n              <p>User Score: {MovieUserScore}</p>\n              <div>\n                <h3>Overview</h3>\n                <p>{movieOverview}</p>\n              </div>\n              <div>\n                <h3>Genres</h3>\n                <StyledGenresList>\n                  {movieGenres.map(genre => {\n                    return <li key={genre.id}> {genre.name}</li>;\n                  })}\n                </StyledGenresList>\n              </div>\n            </StyledMovieDetails>\n          </StyledMovieCard>\n          <hr />\n          <StyledInfo>\n            <p>Additional information</p>\n            <StyledList>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </StyledList>\n          </StyledInfo>\n          <hr />\n          <section>\n            <Suspense\n              fallback={\n                <div>\n                  <p>Loading subpage...</p>\n                </div>\n              }\n            >\n              <Outlet />\n            </Suspense>\n          </section>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchMovies","queryType","mediaType","timeWindow","query","response","data","getMovieById","movieId","getMovieCreditsById","getMovieReviewsById","getMovie","StyledMovieCard","styled","StyledMovieDetails","StyledMovieThumb","StyledGenresList","StyledList","StyledInfo","useParams","location","useLocation","console","log","useState","isLoading","setIsLoading","movieReleaseDate","setMovieReleaseDate","movieTitle","setMovieTitle","movieOverview","setMovieOverview","movieGenres","setMovieGenres","moviePoster","setMoviePoster","MovieUserScore","setMovieUserScore","backLinkHref","setBackLinkHref","useEffect","state","from","loadMovieDetails","release_date","title","overview","genres","poster_path","vote_average","to","src","alt","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}