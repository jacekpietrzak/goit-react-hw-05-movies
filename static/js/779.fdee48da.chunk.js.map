{"version":3,"file":"static/js/779.fdee48da.chunk.js","mappings":"+SAQAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,WAAOC,EAAWC,EAAWC,EAAYC,GAAzC,uFACFN,EAAAA,EAAAA,IAAA,WACjBG,EADiB,YACJC,EADI,YACSC,EADT,oBAC+BJ,IAF7B,cACnBM,EADmB,yBAKlBA,EAASC,MALS,2CAAH,4DAQXC,EAAY,mCAAG,WAAMC,GAAN,uFACHV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADpC,cACpBM,EADoB,yBAGnBA,EAASC,MAHU,2CAAH,sDAMZG,EAAmB,mCAAG,WAAMD,GAAN,uFACVV,EAAAA,EAAAA,IAAA,iBACXU,EADW,4BACgBT,EADhB,oBADU,cAC3BM,EAD2B,yBAK1BA,EAASC,MALiB,2CAAH,sDAQnBI,EAAmB,mCAAG,WAAMF,GAAN,uFACVV,EAAAA,EAAAA,IAAA,iBACXU,EADW,4BACgBT,EADhB,2BADU,cAC3BM,EAD2B,yBAK1BA,GAL0B,2CAAH,sDASnBM,EAAQ,mCAAG,WAAMP,GAAN,uFACCN,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBK,IAFtB,cAChBC,EADgB,yBAKfA,GALe,2CAAH,qD,4JCxCRO,EAAWC,EAAAA,GAAAA,GAAH,wGAORC,EAAWD,EAAAA,GAAAA,GAAH,kF,kBC6CrB,MAhDA,WACE,IAAQL,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAkCQ,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAgB,mCAAG,2FACvBH,GAAa,GADU,mBAGER,EAAAA,EAAAA,IAAoBF,GAHtB,OAGfH,EAHe,OAKrBe,EAAWf,EAASC,KAAKgB,SALJ,yEAQrBJ,GAAa,GARQ,4EAAH,qDAiBtB,OALAK,EAAAA,EAAAA,YAAU,WACRF,GAED,GAAE,KAGD,SAAC,KAAD,UACGJ,GACC,yCAEA,yBACsB,IAAnBE,EAAQK,QACP,qEAEA,SAACZ,EAAD,UACGO,EAAQM,KAAI,SAAAC,GACX,OACE,UAACZ,EAAD,YACE,qCAAaY,EAAOC,OAApB,QACA,uBAAID,EAAOE,YAFEF,EAAOG,GAKzB,SAOd,C","sources":["Services/Api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n// /trending/get-trending\n// /search/search-movies\n// /movies/get-movie-details\n// /movies/get-movie-credits\n// /movies/get-movie-reviews\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9419a46407ab6d0a86a089cd8749b3b7';\n\nexport const fetchMovies = async (queryType, mediaType, timeWindow, query) => {\n  const response = await axios.get(\n    `/${queryType}/${mediaType}/${timeWindow}?api_key=${API_KEY}`\n  );\n  // console.log('Api fetchMovies', response);\n  return response.data;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  // console.log('Api MovieById', response);\n  return response.data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log('Api credits:', response);\n  return response.data;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  // console.log('Api reviews:', response);\n  return response;\n};\n\n// /search/search-movies\nexport const getMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  // console.log('getMovie', response);\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  list-style: none;\n`;\n\nexport const StyledLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviewsById } from 'Services/Api';\nimport { StyledUl, StyledLi } from './Reviews.styled';\nimport { StyledSection } from 'components/AppTemplate/AppTemplate.styled';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n\n  const loadMovieReviews = async () => {\n    setIsLoading(true);\n    try {\n      const response = await getMovieReviewsById(movieId);\n      // console.log(response);\n      setReviews(response.data.results);\n    } catch (error) {\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadMovieReviews();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <StyledSection>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <div>\n          {reviews.length === 0 ? (\n            <p>We don't have any reviews for this movie</p>\n          ) : (\n            <StyledUl>\n              {reviews.map(review => {\n                return (\n                  <StyledLi key={review.id}>\n                    <h3>Author: {review.author} </h3>\n                    <p>{review.content}</p>\n                  </StyledLi>\n                );\n              })}\n            </StyledUl>\n          )}\n        </div>\n      )}\n    </StyledSection>\n  );\n}\n\nexport default Reviews;\n"],"names":["axios","API_KEY","fetchMovies","queryType","mediaType","timeWindow","query","response","data","getMovieById","movieId","getMovieCreditsById","getMovieReviewsById","getMovie","StyledUl","styled","StyledLi","useParams","useState","isLoading","setIsLoading","reviews","setReviews","loadMovieReviews","results","useEffect","length","map","review","author","content","id"],"sourceRoot":""}