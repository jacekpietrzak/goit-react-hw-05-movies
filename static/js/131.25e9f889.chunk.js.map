{"version":3,"file":"static/js/131.25e9f889.chunk.js","mappings":"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","sources":["Services/Api.js","components/MovieCard/MovieCard.jsx","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9419a46407ab6d0a86a089cd8749b3b7';\n\nexport const fetchMovies = async (queryType, mediaType, timeWindow) => {\n  const response = await axios.get(\n    `/${queryType}/${mediaType}/${timeWindow}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response;\n};\n\nexport const getMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n};\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledMovieCard = styled.div`\n  display: flex;\n  gap: 15px;\n  padding: 15px 0;\n`;\n\nconst StyledMovieThumb = styled.img`\n  display: block;\n  max-height: 350px;\n`;\n\nconst StyledMovieDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nconst StyledGenresList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  list-style: none;\n`;\n\nfunction MovieCard({\n  moviePoster,\n  movieTitle,\n  movieReleaseDate,\n  MovieUserScore,\n  movieOverview,\n  movieGenres,\n}) {\n  return (\n    <StyledMovieCard>\n      <StyledMovieThumb src={moviePoster} alt={movieTitle} />\n      <StyledMovieDetails>\n        <h2>\n          {movieTitle} ({movieReleaseDate.slice(0, 4)})\n        </h2>\n        <p>User Score: {MovieUserScore}%</p>\n        <div>\n          <h3>Overview</h3>\n          <p>{movieOverview}</p>\n        </div>\n        <div>\n          <h3>Genres</h3>\n          <StyledGenresList>\n            {movieGenres.map(genre => {\n              return <li key={genre.id}> {genre.name}</li>;\n            })}\n          </StyledGenresList>\n        </div>\n      </StyledMovieDetails>\n    </StyledMovieCard>\n  );\n}\n\nMovieCard.propTypes = {\n  moviePoster: PropTypes.string,\n  movieTitle: PropTypes.string,\n  movieReleaseDate: PropTypes.string,\n  MovieUserScore: PropTypes.number,\n  movieOverview: PropTypes.string,\n  movieGenres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledAdditionalInfo = styled.div`\n  padding: 15px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  list-style: none;\n`;\n\nfunction AdditionalInfo() {\n  return (\n    <StyledAdditionalInfo>\n      <p>Additional information</p>\n      <StyledList>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </StyledList>\n    </StyledAdditionalInfo>\n  );\n}\n\nexport default AdditionalInfo;\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieById } from 'Services/Api';\n\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport AdditionalInfo from 'components/AdditionalInfo/AdditionalInfo';\nimport Loading from 'components/Loading/Loading';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieReleaseDate, setMovieReleaseDate] = useState('');\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movieOverview, setMovieOverview] = useState('');\n  const [movieGenres, setMovieGenres] = useState([]);\n  const [moviePoster, setMoviePoster] = useState('');\n  const [MovieUserScore, setMovieUserScore] = useState(0);\n\n  const [backLinkHref, setBackLinkHref] = useState('');\n\n  useEffect(() => {\n    setBackLinkHref(location.state?.from ?? '/');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  const loadMovieDetails = async () => {\n    setIsLoading(true);\n    try {\n      const response = await getMovieById(movieId);\n      setMovieReleaseDate(response.release_date);\n      setMovieTitle(response.title);\n      setMovieOverview(response.overview);\n      setMovieGenres(response.genres);\n      setMoviePoster(\n        `https://image.tmdb.org/t/p/w500/${response.poster_path}` ===\n          'https://image.tmdb.org/t/p/w500/null'\n          ? 'https://via.placeholder.com/150'\n          : `https://image.tmdb.org/t/p/w500/${response.poster_path}`\n      );\n      setMovieUserScore(response.vote_average);\n    } catch (error) {\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadMovieDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        <Link to={backLinkHref}>Go Back</Link>\n      </div>\n\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <>\n          <MovieCard\n            moviePoster={moviePoster}\n            movieTitle={movieTitle}\n            movieReleaseDate={movieReleaseDate}\n            MovieUserScore={Math.round(MovieUserScore * 10)}\n            movieOverview={movieOverview}\n            movieGenres={movieGenres}\n          />\n          <hr />\n          <AdditionalInfo />\n          <hr />\n          <Suspense fallback={<Loading text={'subpage'} />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchMovies","queryType","mediaType","timeWindow","response","data","getMovieById","movieId","getMovieCreditsById","getMovieReviewsById","getMovie","query","StyledMovieCard","styled","StyledMovieThumb","StyledMovieDetails","StyledGenresList","moviePoster","movieTitle","movieReleaseDate","MovieUserScore","movieOverview","movieGenres","src","alt","slice","map","genre","name","id","StyledAdditionalInfo","StyledList","to","useParams","location","useLocation","useState","isLoading","setIsLoading","setMovieReleaseDate","setMovieTitle","setMovieOverview","setMovieGenres","setMoviePoster","setMovieUserScore","backLinkHref","setBackLinkHref","useEffect","state","from","loadMovieDetails","release_date","title","overview","genres","poster_path","vote_average","Loading","Math","round","Suspense","fallback","text"],"sourceRoot":""}