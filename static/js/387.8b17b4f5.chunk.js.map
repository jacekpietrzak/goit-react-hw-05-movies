{"version":3,"file":"static/js/387.8b17b4f5.chunk.js","mappings":"+SAQAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,WAAOC,EAAWC,EAAWC,EAAYC,GAAzC,uFACFN,EAAAA,EAAAA,IAAA,WACjBG,EADiB,YACJC,EADI,YACSC,EADT,oBAC+BJ,IAF7B,cACnBM,EADmB,yBAKlBA,EAASC,MALS,2CAAH,4DAQXC,EAAY,mCAAG,WAAMC,GAAN,uFACHV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADpC,cACpBM,EADoB,yBAGnBA,EAASC,MAHU,2CAAH,sDAMZG,EAAmB,mCAAG,WAAMD,GAAN,uFACVV,EAAAA,EAAAA,IAAA,iBACXU,EADW,4BACgBT,EADhB,oBADU,cAC3BM,EAD2B,yBAK1BA,EAASC,MALiB,2CAAH,sDAQnBI,EAAmB,mCAAG,WAAMF,GAAN,uFACVV,EAAAA,EAAAA,IAAA,iBACXU,EADW,4BACgBT,EADhB,2BADU,cAC3BM,EAD2B,yBAK1BA,GAL0B,2CAAH,sDASnBM,EAAQ,mCAAG,WAAMP,GAAN,uFACCN,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBK,IAFtB,cAChBC,EADgB,yBAKfA,GALe,2CAAH,qD,4JCxCRO,EAAkBC,EAAAA,GAAAA,IAAH,iEAKfC,EAAWD,EAAAA,GAAAA,GAAH,wG,kBCiDrB,MAlDA,WACE,IAAQL,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAkCQ,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAgB,mCAAG,2FACvBH,GAAa,GADU,mBAGET,EAAAA,EAAAA,IAAoBD,GAHtB,OAGfH,EAHe,OAKrBe,EAAQf,EAASc,MALI,yEAQrBD,GAAa,GARQ,4EAAH,qDAiBtB,OALAI,EAAAA,EAAAA,YAAU,WACRD,GAED,GAAE,KAGD,SAAC,KAAD,UACGJ,GACC,yCAEA,SAACH,EAAD,UACGK,EAAKI,KAAI,SAAAC,GACR,OACE,0BAC0B,OAAvBA,EAAMC,cACL,SAACb,EAAD,CAAiBc,IAAI,qCAErB,SAACd,EAAD,CACEc,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAKH,EAAMI,QAGf,uBAAIJ,EAAMI,QACV,uCAAeJ,EAAMK,eAVdL,EAAMM,QAalB,OAKV,C","sources":["Services/Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n// /trending/get-trending\n// /search/search-movies\n// /movies/get-movie-details\n// /movies/get-movie-credits\n// /movies/get-movie-reviews\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9419a46407ab6d0a86a089cd8749b3b7';\n\nexport const fetchMovies = async (queryType, mediaType, timeWindow, query) => {\n  const response = await axios.get(\n    `/${queryType}/${mediaType}/${timeWindow}?api_key=${API_KEY}`\n  );\n  // console.log('Api fetchMovies', response);\n  return response.data;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  // console.log('Api MovieById', response);\n  return response.data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log('Api credits:', response);\n  return response.data;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  // console.log('Api reviews:', response);\n  return response;\n};\n\n// /search/search-movies\nexport const getMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  // console.log('getMovie', response);\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const StyledCastThumb = styled.img`\n  display: block;\n  max-height: 100px;\n`;\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  list-style: none;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCreditsById } from 'Services/Api';\nimport { StyledUl, StyledCastThumb } from './Cast.styled';\nimport { StyledSection } from 'components/AppTemplate/AppTemplate.styled';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [cast, setCast] = useState([]);\n\n  const loadMovieCredits = async () => {\n    setIsLoading(true);\n    try {\n      const response = await getMovieCreditsById(movieId);\n      // console.log('credits', response);\n      setCast(response.cast);\n    } catch (error) {\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadMovieCredits();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <StyledSection>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <StyledUl>\n          {cast.map(actor => {\n            return (\n              <li key={actor.cast_id}>\n                {actor.profile_path === null ? (\n                  <StyledCastThumb src=\"https://via.placeholder.com/150\" />\n                ) : (\n                  <StyledCastThumb\n                    src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                    alt={actor.name}\n                  />\n                )}\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </li>\n            );\n          })}\n        </StyledUl>\n      )}\n    </StyledSection>\n  );\n}\n\nexport default Cast;\n"],"names":["axios","API_KEY","fetchMovies","queryType","mediaType","timeWindow","query","response","data","getMovieById","movieId","getMovieCreditsById","getMovieReviewsById","getMovie","StyledCastThumb","styled","StyledUl","useParams","useState","isLoading","setIsLoading","cast","setCast","loadMovieCredits","useEffect","map","actor","profile_path","src","alt","name","character","cast_id"],"sourceRoot":""}